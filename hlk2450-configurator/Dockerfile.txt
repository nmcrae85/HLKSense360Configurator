# ---------- builder ----------
FROM node:18-alpine AS builder
# Install required system packages
RUN apk add --no-cache bash curl git python3 make g++
WORKDIR /app

# CRITICAL FIX: Set PATH to include node_modules/.bin for ALL subsequent RUN commands
ENV PATH="/app/node_modules/.bin:$PATH"

# Install dependencies INCLUDING devDependencies
COPY package.json package-lock.json ./
RUN npm ci --include=dev

# Verify npm install worked and binaries exist
RUN echo "=== Verifying npm install ===" && \
    ls -la node_modules/.bin/ | head -20 && \
    echo "=== Testing vite and esbuild executables ===" && \
    ls -l ./node_modules/.bin/vite ./node_modules/.bin/esbuild && \
    chmod +x ./node_modules/.bin/* && \
    ./node_modules/.bin/vite --version && \
    ./node_modules/.bin/esbuild --version

# Copy source code
COPY . .

# Debug: Confirm PATH and working directory
RUN echo "=== Build Environment Debug ===" && \
    echo "Working directory: $(pwd)" && \
    echo "PATH: $PATH" && \
    echo "Testing direct vite command: $(which vite)" && \
    vite --version && \
    esbuild --version

# Run the build with npm run build (which should now find vite/esbuild in PATH)
RUN echo "=== Running npm run build ===" && \
    npm run build

# Verify build output
RUN echo "=== Verifying build output ===" && \
    ls -la dist/ && \
    test -f dist/index.production.js || (echo "BUILD FAILED: dist/index.production.js not found" && exit 1)

# ---------- runtime ----------
FROM node:18-alpine AS runner
RUN apk add --no-cache curl
ENV NODE_ENV=production
ENV PORT=5000
WORKDIR /app

# Install ONLY production deps
COPY package.json package-lock.json ./
RUN npm ci --omit=dev

# Copy built artifacts
COPY --from=builder /app/dist /app/dist

# If the app needs any non-built assets (e.g., public/), copy them too:
COPY --from=builder /app/client/public /app/public

# Expose the port
EXPOSE 5000

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s \
  CMD curl -fsS http://localhost:5000/health || exit 1

# Labels for Home Assistant
LABEL \
    io.hass.name="HLK2450 mmWave Sensor Configurator" \
    io.hass.description="Advanced ESPHome add-on for HLK2450 mmWave sensor configuration" \
    io.hass.arch="armhf|armv7|aarch64|amd64|i386" \
    io.hass.type="addon" \
    io.hass.version="1.0.9"

# Start the server with the correct path
CMD ["node", "dist/index.production.js"]